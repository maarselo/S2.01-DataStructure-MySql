-- MySQL Script generated by MySQL Workbench
-- Thu Sep 11 22:18:36 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Spotify
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Spotify` ;

-- -----------------------------------------------------
-- Schema Spotify
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Spotify` DEFAULT CHARACTER SET utf8 ;
USE `Spotify` ;

-- -----------------------------------------------------
-- Table `Countries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Countries` ;

CREATE TABLE IF NOT EXISTS `Countries` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Users` ;

CREATE TABLE IF NOT EXISTS `Users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(100) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `sex` ENUM('male', 'female') NOT NULL,
  `birthday` DATE NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `zip_code` VARCHAR(10) NOT NULL,
  `country_id` INT UNSIGNED NOT NULL,
  `type` ENUM('free', 'premium') NOT NULL DEFAULT 'free',
  PRIMARY KEY (`id`, `country_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_user_country_idx` (`country_id` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  CONSTRAINT `fk_user_country`
    FOREIGN KEY (`country_id`)
    REFERENCES `Countries` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Subscriptions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Subscriptions` ;

CREATE TABLE IF NOT EXISTS `Subscriptions` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `subscription_date` DATE NOT NULL,
  `renewal_date` DATE NOT NULL,
  `payment` ENUM('credit card', 'paypal') NOT NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_subscription_user_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_subscription_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `Users` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Credit_cards`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Credit_cards` ;

CREATE TABLE IF NOT EXISTS `Credit_cards` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `suscription_id` INT UNSIGNED NOT NULL,
  `number` VARCHAR(20) NOT NULL,
  `expiration_month` TINYINT UNSIGNED NOT NULL,
  `expiration_year` TINYINT UNSIGNED NOT NULL,
  `cvv` SMALLINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `suscription_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `kf_credit_card_subscription_idx` (`suscription_id` ASC) VISIBLE,
  CONSTRAINT `kf_credit_card_subscription`
    FOREIGN KEY (`suscription_id`)
    REFERENCES `Subscriptions` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Paypal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Paypal` ;

CREATE TABLE IF NOT EXISTS `Paypal` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `subscription_id` INT UNSIGNED NOT NULL,
  `username` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`, `subscription_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_paypal_subscription_idx` (`subscription_id` ASC) VISIBLE,
  CONSTRAINT `fk_paypal_subscription`
    FOREIGN KEY (`subscription_id`)
    REFERENCES `Subscriptions` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Payments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Payments` ;

CREATE TABLE IF NOT EXISTS `Payments` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_subscription` INT UNSIGNED NOT NULL,
  `order_number` INT NOT NULL,
  `payment_date` DATE NOT NULL,
  `price` DECIMAL(6,2) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `id_subscription`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_payments_subscription_idx` (`id_subscription` ASC) VISIBLE,
  UNIQUE INDEX `order_number_UNIQUE` (`order_number` ASC) VISIBLE,
  CONSTRAINT `fk_payments_subscription`
    FOREIGN KEY (`id_subscription`)
    REFERENCES `Subscriptions` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Playlists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Playlists` ;

CREATE TABLE IF NOT EXISTS `Playlists` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `creation_date` DATE NOT NULL,
  `total_songs` INT UNSIGNED NOT NULL,
  `state` ENUM('active', 'deleted') NOT NULL,
  `delete_date` DATE NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_playlist_user_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `Users` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Artists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Artists` ;

CREATE TABLE IF NOT EXISTS `Artists` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `image` BLOB NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Albums`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Albums` ;

CREATE TABLE IF NOT EXISTS `Albums` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NOT NULL,
  `release_year` YEAR NOT NULL,
  `image` BLOB NULL,
  `artist_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `artist_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_albums_artists_idx` (`artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_albums_artists`
    FOREIGN KEY (`artist_id`)
    REFERENCES `Artists` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Songs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Songs` ;

CREATE TABLE IF NOT EXISTS `Songs` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NOT NULL,
  `duration` DECIMAL(5,2) UNSIGNED NOT NULL,
  `times_played` BIGINT UNSIGNED NOT NULL,
  `album_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_song_albums_idx` (`album_id` ASC) VISIBLE,
  CONSTRAINT `fk_song_albums`
    FOREIGN KEY (`album_id`)
    REFERENCES `Albums` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Shared_playlists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Shared_playlists` ;

CREATE TABLE IF NOT EXISTS `Shared_playlists` (
  `playlist_id` INT UNSIGNED NOT NULL,
  `song_id` INT UNSIGNED NOT NULL,
  `added_by` INT UNSIGNED NOT NULL,
  `added_date` DATE NOT NULL,
  PRIMARY KEY (`playlist_id`, `song_id`, `added_by`),
  UNIQUE INDEX `song_id_UNIQUE` (`song_id` ASC) VISIBLE,
  UNIQUE INDEX `playlist_id_UNIQUE` (`playlist_id` ASC) VISIBLE,
  UNIQUE INDEX `added_by_UNIQUE` (`added_by` ASC) VISIBLE,
  CONSTRAINT `fk_shared_playlist`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `Playlists` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_shared_user`
    FOREIGN KEY (`added_by`)
    REFERENCES `Users` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_shared_song`
    FOREIGN KEY (`song_id`)
    REFERENCES `Songs` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Users_liked_artists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Users_liked_artists` ;

CREATE TABLE IF NOT EXISTS `Users_liked_artists` (
  `user_id` INT UNSIGNED NOT NULL,
  `artist_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`, `artist_id`),
  INDEX `fk_user_favourite_artists_artists_idx` (`artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_liked_artists_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `Users` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_liked_artists_artists`
    FOREIGN KEY (`artist_id`)
    REFERENCES `Artists` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Related_artists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Related_artists` ;

CREATE TABLE IF NOT EXISTS `Related_artists` (
  `artist_id` INT UNSIGNED NOT NULL,
  `related_artist_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`artist_id`, `related_artist_id`),
  INDEX `fk_related_artists_related_artist_idx` (`related_artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_related_artists_artists`
    FOREIGN KEY (`artist_id`)
    REFERENCES `Artists` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_related_artists_related_artist`
    FOREIGN KEY (`related_artist_id`)
    REFERENCES `Artists` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Users_liked_songs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Users_liked_songs` ;

CREATE TABLE IF NOT EXISTS `Users_liked_songs` (
  `user_id` INT UNSIGNED NOT NULL,
  `song_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`, `song_id`),
  INDEX `ft_user_liked_songs_songs_idx` (`song_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_liked_songs_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `Users` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `ft_users_liked_songs_songs`
    FOREIGN KEY (`song_id`)
    REFERENCES `Songs` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Users_liked_albums`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Users_liked_albums` ;

CREATE TABLE IF NOT EXISTS `Users_liked_albums` (
  `user_id` INT UNSIGNED NOT NULL,
  `album_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`, `album_id`),
  INDEX `fk_users_liked_albums_albums_idx` (`album_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_liked_albums_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `Users` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_liked_albums_albums`
    FOREIGN KEY (`album_id`)
    REFERENCES `Albums` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PlayLists_songs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PlayLists_songs` ;

CREATE TABLE IF NOT EXISTS `PlayLists_songs` (
  `playlist_id` INT UNSIGNED NOT NULL,
  `song_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`playlist_id`, `song_id`),
  INDEX `fk_playlists_songs_songs_idx` (`song_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlists_songs_playlists`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `Playlists` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_playlists_songs_songs`
    FOREIGN KEY (`song_id`)
    REFERENCES `Songs` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
